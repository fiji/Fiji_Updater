Show-stoppers:

- We need a script that uses the plugin manager's internal functions to
  do a complete or partial update, using the command line.  We need this
  to allow easy update after a major Fiji release.

  In other words: we need to be able to create db.xml.gz in the release
  script, so a non-interactive version of the "uploading" is required.  This
  means that the fact that FileUploader has mixed responsibilities (do SSH
  _and_ know what files to write and in which order) comes back to bite us.

- We need to have a mode which preselects every updateable plugin as
  "Update".  This will be the new "Update Fiji".

- If the new db.xml.gz contains an entry all of whose timestamps are
  newer than the timestamp of the db.xml.gz we downloaded previously,
  that entry must be new.  The user might be interested in installing
  this.

- Regex bug: the search field: when typing IO, it lists any that match
  and I and a O, not the string IO.  If you fix this, please be careful
  to keep it case-insensitive as it is now.

- Usability bug: the install/remove it/upload it combo box: it takes a normal
  user minutes, plus assistance from people who know, to realize where to click
  with the mouse to make the box reveal itself.

  My suggestion: make the combobox always visible, so the pulldown
  arrow is visible and self-evident.  Synaptic, Ubuntu's default package
  manager, is an example of a self-evident package marking system.

- Additionally, have different labels for the different states in which there
  is nothing to do:

	Up-to-date, Updateable, Modified, Unknown

- Usability bug: the "Edit details" button is only active when uploading a
  plugin.  I'd rather have the Edit Details button on at all times (or let the
  field be editable at all times); if the developer chooses to just edit the
  details without updating the file, that should be perfectly fine.

  Think for example if a dependency is fixed.

- The dependency list should be editable so that the developer can
  correct mistakes (not all are "at-least" dependencies) and add
  additional dependencies.

- Instead of rewriting the dependency list (possibly losing vital
  dependencies, such as "that file needs to be deleted when this file is
  installed"), the dependency analyzer should only add dependencies that
  are not yet in the list, and only just after a plugin was marked as
  "Update it".

- We need to add macros/ and scripts/ (the latter possibly needs to be
  split into bin/ and scripts/, because we have many scripts that are
  only interesting to developers, from the command line, so they should
  _never_ end up in the Updater) and file extensions .py, .rb, .clj, .js,
  .bsh, .txt, .ijm and .class, too.

- The db.xml.gz has to be updated to reflect the former versions of the
  files (I wrote a script to help that, but you seem not to have pulled
  it).

- For the files like StartupMacros.txt (which we _need_, as there is a
  serious bug regarding the lookup tables in Fiji Dresden 2009), we need
  to include previous version hashes, too, so that people _can_ update
  without a hassle.

Not-quite show-stoppers:

- "Update it" would probably be better named "Upload", to make it clear
  what is updated.

- If the developer tries to upload a version that has already be marked
  as a previous version, ask her loudly if she is sure.

- We need an action that records that a file is to be deleted.  This
  needs to be presented as an option when the file is in the database,
  but not in the current installation.  The label of that action escapes
  me, though: what would be a sensible label?

- The actions should be editable by keyboard shortcuts.  Likewise,
  "Escape" should exit, asking if the user is sure when actions where
  selected but not launched.

- Last time I looked, the "ui" package was in dear need of
  simplification.

- The list of plugins included in the file should be shown, too.  We can
  use fiji.User_Plugins' parsePluginsConfig() method, probably after
  wrapping it into a public method that takes a String parameter
  containing the .jar file's path.

- We need a "category" attribute so we can label, say, "Segmentation
  Editor" to belong into the categories "segmentation" and
  "interactive".

- beganUpload() method does funny commands at the beginning.  It should
  definitely not need to "chmod u-w" db.xml.gz!

- make the list sortable by clicking on the column titles (second click
  sorts descending).

- instead of having a data model for the XML file, and a different one for
  Java, use the XML one in Java, too: we should _not_ create a complete
  PluginObject for every single previous version!
